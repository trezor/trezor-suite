name: "[Release] connect v9 init"

permissions:
  id-token: write # for fetching the OIDC token
  contents: read # for actions/checkout

on:
  workflow_dispatch:

jobs:
  # Version should have been bumped by now thanks to ./ci/scripts/connect-release-init-npm.js
  extract-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Number of commits to fetch. 0 indicates all history for all branches and tags.
          fetch-depth: 0

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - name: Extract connect version
        id: set-version
        run: echo "version=$(node ./ci/scripts/get-connect-version.js)" >> $GITHUB_OUTPUT

  create-push-release-branch:
    needs: [extract-version]
    name: "Create release branch for version ${{ needs.extract-version.outputs.version }}"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Git config
        run: |
          git config --global user.name "trezor-ci"
          git config --global user.email "${{ secrets.TREZOR_BOT_EMAIL }}"

      - name: Create and push new branch
        env:
          GITHUB_TOKEN: ${{ secrets.TREZOR_BOT_TOKEN }}
          BRANCH_NAME: "release/connect/${{ needs.extract-version.outputs.version }}"
        run: |
          echo ${{ env.BRANCH_NAME }}
          git checkout -b ${{ env.BRANCH_NAME }}
          git push origin ${{ env.BRANCH_NAME }}

  # This job deploys to staging-connect.trezor.io/9.x.x
  deploy-staging-semantic-version:
    environment: production
    name: "Deploying to staging-connect.trezor.io/${{ needs.extract-version.outputs.version }}"
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/release/connect/')
    steps:
      - uses: actions/checkout@v4
        with:
          ref: release/connect/${{  needs.extract-version.outputs.version }}

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - name: Build and deploy to staging-connect.trezor.io/9.x.x
        uses: ./.github/actions/release-connect
        with:
          awsRoleToAssume: "arn:aws:iam::538326561891:role/gh_actions_trezor_suite_prod_deploy"
          awsRegion: "eu-central-1"
          serverHostname: "staging-connect.trezor.io"
          serverPath: ${{ needs.extract-version.outputs.version }}

  # This job deploys to staging-connect.trezor.io/9
  deploy-staging-v9:
    environment: production
    name: "Deploying to staging-connect.trezor.io/9"
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/release/connect/')
    steps:
      - uses: actions/checkout@v4
        with:
          ref: release/connect/${{  needs.extract-version.outputs.version }}

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - name: Build and deploy to staging-connect.trezor.io/9
        uses: ./.github/actions/release-connect
        with:
          awsRoleToAssume: "arn:aws:iam::538326561891:role/gh_actions_trezor_suite_prod_deploy"
          awsRegion: "eu-central-1"
          serverHostname: "staging-connect.trezor.io"
          serverPath: "9"
