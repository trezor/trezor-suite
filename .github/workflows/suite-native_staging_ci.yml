name: suite-native staging release

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  android_staging:
    runs-on: ubuntu-latest
    environment: staging
    timeout-minutes: 45
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"

      - name: Setup react-native kernel and increase watchers
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
      - name: Decode files
        env:
          ENCODED_STRING_KEYSTORE: ${{ secrets.STAGING_KEYSTORE_FILE }}
          ENCODED_STRING_JSON_FILE: ${{secrets.GOOGLE_PLAY_JSON_KEY_STAGING}}
        run: |
          echo $ENCODED_STRING_KEYSTORE | base64 -d > suite-native/app/android/app/stag-upload-key.keystore
          echo $ENCODED_STRING_JSON_FILE > suite-native/app/android/google_play_key.json

      - name: Install dependecies
        run: |
          yarn install
          yarn build:libs

      - name: Ruby Setup for Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2.1"
          bundler-cache: true
      - name: Install bundler
        working-directory: suite-native/app/
        run: gem install bundler

      - name: Fastlane build and deploy
        working-directory: suite-native/app/
        env:
          SIGNING_KEY_FILE: stag-upload-key.keystore
          SIGNING_KEY_STORE_PASSWORD: ${{ secrets.SIGNING_KEY_STORE_PASSWORD_STAGING }}
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS_STAGING }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD_STAGING }}
          GOOGLE_PLAY_JSON_KEY_FILE: ./android/google_play_key.json
        # builds and publishes the app
        run: |
          bundle install
          bundle exec fastlane android staging

  ios_staging:
    runs-on: macos-12
    environment: staging
    timeout-minutes: 75
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: ".nvmrc"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Restore yarn cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-cache-folder-${{ hashFiles('**/yarn.lock', '.yarnrc.yml') }}
          restore-keys: |
            yarn-cache-folder-

      - name: Decode files
        env:
          APPSTORE_CERTIFICATE_CONTENT: ${{ secrets.APPSTORE_CERTIFICATE_CONTENT_STAGING }}
        run: |
          echo $APPSTORE_CERTIFICATE_CONTENT | base64 -d > suite-native/app/TrezorDistributionCertificate.p12

      - name: Install dependecies
        run: |
          yarn install
          yarn build:libs
          yarn workspace @trezor/suite-native pods

      - name: Ruby Setup for Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.1.3"
          bundler-cache: true
      - name: Install bundler
        working-directory: suite-native/app/
        run: gem install bundler

      - name: Fastlane build and deploy
        working-directory: suite-native/app/
        env:
          APPSTORE_KEY_ID: ${{ secrets.APPSTORE_KEY_ID_STAGING }}
          APPSTORE_KEY_ISSUER_ID: ${{ secrets.APPSTORE_KEY_ISSUER_ID_STAGING }}
          APPSTORE_KEY_FILE_CONTENT: ${{ secrets.APPSTORE_KEY_FILE_CONTENT_STAGING }}
          APPSTORE_CERTIFICATE_PASSWORD: ${{ secrets.APPSTORE_CERTIFICATE_PASSWORD_STAGING }}
          TMP_KEYCHAIN_NAME: ${{ secrets.APPSTORE_TMP_KEYCHAIN_NAME_STAGING }}
          TMP_KEYCHAIN_PASSWORD: ${{ secrets.APPSTORE_TMP_KEYCHAIN_PASSWORD_STAGING }}

        # builds and publishes the app
        run: |
          bundle install
          bundle exec fastlane ios staging
