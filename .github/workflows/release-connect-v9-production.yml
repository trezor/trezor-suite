name: "[Release] connect v9 production"

permissions:
  id-token: write # for fetching the OIDC token
  contents: read # for actions/checkout

on:
  workflow_dispatch:
    inputs:
      deploymentType:
        description: "Select the deployment type. (example: canary, stable)"
        required: true
        type: choice
        options:
          - canary
          - stable

jobs:
  extract-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Number of commits to fetch. 0 indicates all history for all branches and tags.
          fetch-depth: 0

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      - name: Extract connect version
        id: set-version
        run: echo "version=$(node ./ci/scripts/get-connect-version.js)" >> $GITHUB_OUTPUT

  check-version-match:
    runs-on: ubuntu-latest
    needs: [extract-version]
    steps:
      - uses: actions/checkout@v4

      - name: Check connect version match
        uses: ./.github/actions/check-connect-version-match
        with:
          branch_ref: "${{ github.ref }}"
          extracted_version: "${{ needs.extract-version.outputs.version }}"

  # set the rollback
  sync-rollback-connect-v9:
    needs: [extract-version, check-version-match]
    if: startsWith(github.ref, 'refs/heads/release/connect/')
    environment: production-connect
    name: "Backing up current production version ${{ needs.extract-version.outputs.version }} to rollback bucket"
    runs-on: ubuntu-latest
    env:
      LATEST_VERSION: 9
    steps:
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::538326561891:role/gh_actions_connect_prod_deploy
          aws-region: eu-central-1

      - name: Synching rollback bucket with current production
        run: |
          aws s3 sync "s3://connect.trezor.io/${{ env.LATEST_VERSION }}/" "s3://rollback-connect.trezor.io/${{ env.LATEST_VERSION }}/"

  deploy-production-semantic-version:
    needs: [extract-version, check-version-match]
    if: startsWith(github.ref, 'refs/heads/release/connect/')
    environment: production-connect
    name: "Deploying to connect.trezor.io/9.x.x"
    runs-on: ubuntu-latest
    env:
      CURRENT_VERSION: ${{ needs.extract-version.outputs.version }}
    steps:
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::538326561891:role/gh_actions_connect_prod_deploy
          aws-region: eu-central-1

      - name: Synching production bucket with current staging
        run: |
          aws s3 sync --delete --cache-control 'public, max-age=3600' "s3://staging-connect.trezor.io/${{ env.CURRENT_VERSION }}/" "s3://connect.trezor.io/${{ env.CURRENT_VERSION }}/"
          aws cloudfront create-invalidation --distribution-id E3LVNAOGT94E37 --paths '/*'

  # From staging move it to production
  deploy-production-v9:
    # We deploy to production only if rollback sync was successful.
    needs: [extract-version, check-version-match, sync-rollback-connect-v9]
    if: startsWith(github.ref, 'refs/heads/release/connect/') && github.event.inputs.deploymentType == 'stable'
    environment: production-connect
    name: "Deploying to connect.trezor.io/9/"
    runs-on: ubuntu-latest
    env:
      LATEST_VERSION: 9
    steps:
      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::538326561891:role/gh_actions_trezor_suite_prod_deploy
          aws-region: eu-central-1

      - name: Synching production bucket with current staging
        run: |
          aws s3 sync --delete --cache-control 'public, max-age=3600' "s3://staging-connect.trezor.io/${{ env.LATEST_VERSION }}/" "s3://connect.trezor.io/${{ env.LATEST_VERSION }}/"
          aws cloudfront create-invalidation --distribution-id E3LVNAOGT94E37 --paths '/*'
