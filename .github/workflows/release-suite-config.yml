name: "[Release] suite config"

permissions:
  id-token: write # for fetching the OIDC token
  contents: read # for actions/checkout

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Release environment"
        type: environment
        required: true
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  release-config:
    if: github.repository == 'trezor/trezor-suite'
    environment: ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    env:
      AWS_REGION: "eu-central-1"
      AWS_CLOUDFRONT_ID: E1ERY5K2OTKKI1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::538326561891:role/gh_actions_trezor_suite_prod_deploy
          aws-region: ${{ env.AWS_REGION }}

      - name: Build and sign ${{ github.event.inputs.environment }} config
        if: ${{ github.event.inputs.environment == 'develop' && github.ref == 'refs/heads/develop' }}
        run: |
          yarn install
          yarn message-system-sign-config

      - name: Build and sign ${{ github.event.inputs.environment }} message-system config file
        if: ${{ github.event.inputs.environment == 'production' && github.ref == 'refs/heads/develop' }}
        env:
          IS_CODESIGN_BUILD: "true"
          JWS_PRIVATE_KEY_ENV: ${{ secrets.JWS_PRIVATE_KEY_ENV }}
        run: |
          yarn install
          yarn message-system-sign-config

      - name: Upload ${{ github.event.inputs.environment }} message-system config file
        if: ${{ github.ref == 'refs/heads/develop' }}
        run: |
          if [ '${{ github.event.inputs.environment }}' == 'production' ]
          then
            aws s3 cp suite-common/message-system/files/config.v1.jws s3://data.trezor.io/config/stable/config.v1.jws --cache-control no-cache
            aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_ID} --paths '/config/stable/*'
          else
            aws s3 cp suite-common/message-system/files/config.v1.jws s3://data.trezor.io/config/develop/config.v1.jws --cache-control no-cache
            aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_ID} --paths '/config/develop/*'
          fi
