permissions:
  id-token: write # for fetching the OIDC token
  contents: read # for actions/checkout

name: "Build overview"
description: "Build overview for dev server builds"
inputs:
  dir:
    description: "Subdirectory to upload"
    required: true
    type: string
  source_dir:
    description: "Source directory to upload"
    required: true
    type: string
outputs:
  data:
    description: "Data to be uploaded"
    value: ${{ steps.set-data.outputs.data }}

runs:
  using: "composite"

  steps:
    - name: Extract branch version
      shell: bash
      id: extract-branch-version
      run: |
        BRANCH_REF="${{ inputs.branch_ref }}"
        BRANCH_VERSION="${BRANCH_REF#refs/heads/release/connect/}"
        echo "branch_version=$BRANCH_VERSION" >> $GITHUB_OUTPUT
    - name: Configure aws credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::538326561891:role/gh_actions_trezor_suite_dev_deploy
        aws-region: eu-central-1

    - name: set data
      id: set-data
      shell: bash
      run: |
        echo "Setting data"
        ls -la
        echo "data=$(node ../scripts/ci/build-overview/build-data.js {{ steps.extract_branch.outputs.branch }} foo-bar-name foo-bar-url)" >> $GITHUB_OUTPUT

    - name: Upload data to dev server and refresh html
      shell: bash
      env:
        DEPLOY_PATH: s3://dev.suite.sldev.cz/meta/${{ steps.extract_branch.outputs.branch }}
      run: |
        echo $GITHUB_OUTPUT
        echo ${{ steps.set-data.outputs.data }}
        echo "DEPLOY_PATH is set to ${DEPLOY_PATH}"
        mkdir -p tmp_build_directory/${{ inputs.dir }}
        echo ${{ steps.set-data.outputs.data }} > tmp_build_directory/data.json
        node ../scripts/ci/build-overview/build-html.js ${{ steps.set-data.outputs.data }} > tmp_build_directory/index.html
        cp -R ${{ inputs.source_dir }}/* tmp_build_directory/${{inputs.dir}}
        aws s3 sync --delete tmp_build_directory/ "${DEPLOY_PATH}"
