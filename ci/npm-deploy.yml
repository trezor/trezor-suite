.packages_matrix: &packages_matrix
  parallel:
    matrix:
      - PACKAGE:
          [
            "blockchain-link",
            "components",
            "connect-common",
            "transport",
            "utils",
            "utxo-lib",
            "connect-plugin-stellar",
            "connect",
            "connect-web",
            "connect-common",
          ]

.packages_matrix_connect: &packages_matrix_connect
  parallel:
    matrix:
      - PACKAGE: ["connect", "connect-web"]

.npm_registry_beta_rules: &npm_registry_beta_rules
  except:
    - codesing
    - /^npm-release\//
    - schedules
    - /^release\//

.npm_registry_release_rules: &npm_registry_release_rules
  only:
    refs:
      - codesing
      - /^npm-release\//

# npm beta packages deploy to npm registry
.deploy npm base:
  stage: deploy npm
  when: manual
  dependencies:
    - install
  tags:
    - deploy
  before_script:
    - nix-shell --run "yarn install --pure-lockfile --cache-folder .yarn --prefer-offline"
    - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
  after_script:
    - rm ~/.npmrc

beta deploy npm:
  extends: .deploy npm base
  <<: *npm_registry_beta_rules
  <<: *packages_matrix
  script:
    - nix-shell --run "node ./ci/scripts/check-version $PACKAGE $CI_COMMIT_BRANCH beta"
    - nix-shell --run "yarn && cd ./packages/$PACKAGE && npm publish --tag beta"

deploy npm:
  extends: .deploy npm base
  <<: *npm_registry_release_rules
  <<: *packages_matrix
  script:
    - nix-shell --run "node ./ci/scripts/check-version $PACKAGE $CI_COMMIT_BRANCH latest"
    - nix-shell --run "yarn && cd ./packages/${PACKAGE} && npm publish"

deploy npm connect:
  extends: .deploy npm base
  only:
    refs:
      - release/connect-v9
  <<: *packages_matrix_connect
  script:
    # todo: consider this. might not be needed, it is run in github.
    # - nix-shell --run "node ./ci/scripts/check-version $PACKAGE $CI_COMMIT_BRANCH latest"
    - nix-shell --run "cd ./packages/${PACKAGE} && npm publish"
