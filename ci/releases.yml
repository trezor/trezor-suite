# Upload everything to staging
suite codesign deploy staging-suite:
  stage: deploy to staging
  needs:
    - release commit messages
    - suite-web build stable codesign
    - suite-desktop build mac codesign
    - suite-desktop build linux codesign
    - suite-desktop build windows codesign
  environment:
    name: ${CI_COMMIT_REF_NAME}-staging-suite
    url: ${STAGING_SUITE_SERVER_URL}
  before_script: []
  only:
    refs:
      - codesign
  when: manual
  script:
    - source ${STAGING_SUITE_DEPLOY_KEYFILE}
    - mkdir -p packages/suite-web/build/static/desktop
    - 'rsync --delete -va "${DESKTOP_APP_NAME}"-*.AppImage ./packages/suite-web/build/static/desktop || :'
    - 'rsync --delete -va "${DESKTOP_APP_NAME}"-*.AppImage.asc ./packages/suite-web/build/static/desktop || :'
    - 'rsync --delete -va "${DESKTOP_APP_NAME}"-*.dmg ./packages/suite-web/build/static/desktop || :'
    - 'rsync --delete -va "${DESKTOP_APP_NAME}"-*.dmg.asc ./packages/suite-web/build/static/desktop || :'
    - 'rsync --delete -va "${DESKTOP_APP_NAME}"-*.exe ./packages/suite-web/build/static/desktop || :'
    - 'rsync --delete -va "${DESKTOP_APP_NAME}"-*.exe.asc ./packages/suite-web/build/static/desktop || :'
    - cd packages/suite-web
    - ./scripts/s3sync.sh staging-suite
    - cd -
  tags:
    - deploy

# Suite desktop deploy to staging
suite-desktop deploy autoupdate test:
  stage: deploy to dev
  needs:
    - release commit messages
    - suite-desktop build mac codesign
    - suite-desktop build linux codesign
    - suite-desktop build windows codesign
  only:
    refs:
      - codesign
  when: manual
  variables:
    DEPLOY_DIRECTORY: ${DEPLOY_BASE_DIR}/suite-desktop/${CI_COMMIT_REF_NAME}
  script:
    - mkdir -p ${DEPLOY_DIRECTORY}
    - 'rsync --delete -va Trezor-Suite* "${DEPLOY_DIRECTORY}/" || :'
    - 'rsync --delete -va latest* "${DEPLOY_DIRECTORY}/" || :'
  tags:
    - deploy

# Suite Desktop create a GitHub release and append signed binaries
suite-desktop github release:
  stage: deploy to production
  needs:
    - release commit messages
    - suite-desktop build mac codesign
    - suite-desktop build linux codesign
    - suite-desktop build windows codesign
  environment:
    name: ${CI_COMMIT_REF_NAME}-staging-suite
    url: ${STAGING_SUITE_SERVER_URL}
  before_script: []
  only:
    refs:
      - codesign
  when: manual
  script:
    - gh config set prompt disabled
    - VERSION=$(jq -r .suiteVersion packages/suite/package.json)
    - gh release create --repo trezor/trezor-suite --draft v${VERSION}  --title "v${VERSION}" ./Trezor-Suite* latest*
  tags:
    - deploy

release commit messages:
  stage: setup environment
  only:
    refs:
      - /^release\//
      - codesign
  script:
    - ci/scripts/check_release_commit_messages.sh

# Messaging system deploy to production
msg-system codesign deploy:
  stage: deploy to production
  when: manual
  needs:
    - "msg-system config sign stable"
  only:
    refs:
      - codesign
  tags:
    - deploy
  variables:
    AWS_CLOUDFRONT_ID: E1ERY5K2OTKKI1
  script:
    - source ${MSG_SYSTEM_DATA_DEPLOY_KEYFILE}
    - aws s3 cp suite-common/message-system/files/config.v1.jws s3://data.trezor.io/config/stable/config.v1.jws --cache-control no-cache
    - aws cloudfront create-invalidation --distribution-id ${AWS_CLOUDFRONT_ID} --paths '/config/stable/*'

# connect v9 deploy to production jobs

# Create rollback copy of connect.trezo.io
connect v9 rollback production:
  stage: deploy to production
  only:
    refs:
      - release/connect-v9
  when: manual
  before_script: []
  needs:
    - connect-web build
    - connect-explorer build
  script:
    - source ${CONNECT_DEPLOY_KEYFILE}
    - aws s3 sync s3://connect.trezor.io s3://rollback-connect.trezor.io
  tags:
    - connect_deploy

# Deploy connect v9 to connect.trezor.io
connect v9 deploy production:
  stage: deploy to production
  only:
    refs:
      - release/connect-v9
  when: manual
  dependencies:
    - connect-web build
    - connect-explorer build
  needs:
    - release commit messages
    - connect-web build
    - connect-explorer build
  before_script: []
  script:
    - source ${CONNECT_DEPLOY_KEYFILE}
    - ./ci/scripts/connect-release.sh 9
  tags:
    - connect_deploy
