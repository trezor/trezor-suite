# Config
.config_sign_stable: &config_sign_stable
  interruptible: true
  dependencies:
    - install
    - msg-system config sign stable

.config_sign_dev: &config_sign_dev
  interruptible: true
  dependencies:
    - install
    - msg-system config sign dev

.run_everything_rules: &run_everything_rules
  refs:
    - develop
    - releases
    - schedules
    - /^release\//

.run_connect_rules: &run_connect_rules
  refs:
    - schedules
    - develop
    # - branches # todo
  changes:
    - "packages/blockchain-link"
    - "packages/connect*/**"
    - "packages/transport"
    - "packages/utxo-lib"
    - "packages/utils"

# Suite-web build
suite-web build dev:
  stage: build
  <<: *config_sign_dev
  variables:
    ASSET_PREFIX: /suite-web/${CI_BUILD_REF_NAME}/web
  script:
    - yarn install --immutable
    - yarn workspace @trezor/suite-web build
  artifacts:
    expire_in: 7 days
    paths:
      - packages/suite-web/build

suite-web build stable codesign:
  stage: build
  <<: *config_sign_stable
  only:
    refs:
      - codesign
  tags:
    - darwin
  variables:
    IS_CODESIGN_BUILD: "true"
    ASSET_PREFIX: /web
  script:
    - . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh || true # loads nix-shell
    - nix-shell --option system x86_64-darwin --run "git lfs pull"
    - nix-shell --option system x86_64-darwin --run "yarn install --immutable"
    - nix-shell --option system x86_64-darwin --run "yarn build:libs"
    - nix-shell --option system x86_64-darwin --run "yarn workspace @trezor/suite-web build"
  artifacts:
    expire_in: 7 days
    paths:
      - packages/suite-web/scripts/s3sync.sh
      - packages/suite-web/build

# Suite web landing build

## Build jobs
suite-web-landing build dev:
  stage: build
  variables:
    ASSET_PREFIX: /suite-web-landing/${CI_BUILD_REF_NAME}
  script:
    - yarn install --immutable
    - yarn workspace @trezor/suite-web-landing build
  artifacts:
    expire_in: 7 days
    paths:
      - packages/suite-web-landing/build

suite-web-landing build stable:
  stage: build
  only:
    refs:
      - develop
      - releases
      - schedules
      - /^release\//
      - codesign
  script:
    - yarn install --immutable
    - yarn workspace @trezor/suite-web-landing build
  artifacts:
    expire_in: 7 days
    paths:
      - packages/suite-web-landing/scripts/s3sync.sh
      - packages/suite-web-landing/build

# Suite desktop build
.build: &build
  stage: build
  script:
    - yarn install --immutable
    - yarn workspace @trezor/suite-desktop build:${platform}
    - ls -la packages/suite-desktop/build-electron
    - mv packages/suite-desktop/build-electron/* .
    - more latest*.yml | cat
  artifacts:
    paths:
      - ${artifact}
      - latest*.yml
    expire_in: 1 days

.build_nix: &build_nix
  script: # override build script to use nix-shell instead
    - . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh || true # loads nix-shell
    - nix-shell --option system x86_64-darwin --run "git lfs pull"
    - nix-shell --option system x86_64-darwin --run "yarn install --immutable"
    - nix-shell --option system x86_64-darwin --run "yarn build:libs"
    - nix-shell --option system x86_64-darwin --run "yarn workspace @trezor/suite-desktop build:${platform}"
    - nix-shell --option system x86_64-darwin --run "bash packages/suite-desktop/scripts/gnupg-sign.sh"
    - ls -la packages/suite-desktop/build-electron
    - mv packages/suite-desktop/build-electron/* .
    - more latest*.yml | cat

## Suite desktop macOS app
suite-desktop build mac:
  <<: *config_sign_dev
  only:
    <<: *run_everything_rules
  tags:
    - darwin
  variables:
    artifact: ${DESKTOP_APP_NAME}*
    platform: mac
  <<: *build
  <<: *build_nix

suite-desktop build mac manual:
  <<: *config_sign_dev
  when: manual
  except:
    <<: *run_everything_rules
  tags:
    - darwin
  variables:
    artifact: ${DESKTOP_APP_NAME}*
    platform: mac
  <<: *build
  <<: *build_nix

suite-desktop build mac codesign:
  <<: *config_sign_stable
  only:
    refs:
      - codesign
  tags:
    - darwin
  variables:
    IS_CODESIGN_BUILD: "true"
    artifact: ${DESKTOP_APP_NAME}*
    platform: mac
  <<: *build
  <<: *build_nix
  artifacts:
    paths:
      - ${artifact}
      - latest*.yml
    expire_in: 7 days

## Suite desktop Linux app
suite-desktop build linux:
  <<: *config_sign_dev
  only:
    <<: *run_everything_rules
  variables:
    artifact: ${DESKTOP_APP_NAME}*
    platform: linux
  <<: *build

suite-desktop build linux manual:
  <<: *config_sign_dev
  when: manual
  except:
    <<: *run_everything_rules
  variables:
    artifact: ${DESKTOP_APP_NAME}*
    platform: linux
  <<: *build

suite-desktop build linux codesign:
  <<: *config_sign_stable
  only:
    refs:
      - codesign
  tags:
    - darwin
  variables:
    IS_CODESIGN_BUILD: "true"
    artifact: ${DESKTOP_APP_NAME}*
    platform: linux
  <<: *build
  <<: *build_nix
  artifacts:
    paths:
      - ${artifact}
      - latest*.yml
    expire_in: 7 days

## Suite desktop Windows app
suite-desktop build windows:
  <<: *config_sign_dev
  only:
    <<: *run_everything_rules
  image: $CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX/electronuserland/builder:16-wine
  variables:
    artifact: ${DESKTOP_APP_NAME}*
    platform: win
  <<: *build

suite-desktop build windows manual:
  <<: *config_sign_dev
  when: manual
  except:
    <<: *run_everything_rules
  image: $CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX/electronuserland/builder:16-wine
  variables:
    artifact: ${DESKTOP_APP_NAME}*
    platform: win
  <<: *build

suite-desktop build windows codesign:
  <<: *config_sign_stable
  only:
    refs:
      - codesign
  tags:
    - darwin
  image: $CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX/electronuserland/builder:16-wine
  variables:
    IS_CODESIGN_BUILD: "true"
    artifact: ${DESKTOP_APP_NAME}*
    platform: win
  <<: *build
  <<: *build_nix
  artifacts:
    paths:
      - ${artifact}
      - latest*.yml
    expire_in: 7 days

suite-native build android:
  image: $CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX/vdovhanych/react-native-android:5.5
  stage: build
  interruptible: true
  script:
    - yarn install --immutable
    - yarn workspace @trezor/suite-native build:android
    - mv suite-native/app/android/app/build/outputs/apk/dev/debug/app-dev-debug.apk .
  artifacts:
    expire_in: 7 day
    paths:
      - app-release.apk

.connect-explorer build base:
  stage: build
  interruptible: true
  script:
    - yarn install --immutable
    - __TREZOR_CONNECT_SRC=https://suite.corp.sldev.cz/connect/${CI_BUILD_REF_NAME}/ yarn workspace @trezor/connect-explorer build
  artifacts:
    expire_in: 7 days
    paths:
      - packages/connect-explorer/build

connect-explorer build:
  extends: .connect-explorer build base
  # only:
  #   <<: *run_connect_rules

# connect-explorer build manual:
#   extends: .connect-explorer build base
#   except:
#     <<: *run_everything_rules
#   # when: manual

# connect-web build
connect-web build:
  stage: build
  # only:
  #   <<: *run_connect_rules
  interruptible: true
  variables:
    GIT_STRATEGY: clone
    GIT_SUBMODULE_STRATEGY: recursive
  script:
    - git submodule update --init --recursive
    - yarn install --immutable
    - yarn workspace @trezor/connect-web build
    - yarn workspace @trezor/connect-iframe build
    - yarn workspace @trezor/connect-popup build
  artifacts:
    expire_in: 1 week
    paths:
      - packages/connect-iframe/build
      - packages/connect-web/build
      - packages/connect-popup/build

# Build components

.run_components_rules: &run_components_rules
  refs:
    - develop
    - releases
    - schedules
    - /^release\//
    - /^run\//
  changes:
    - packages/components
    - packages/components-storybook
    - yarn.lock

.build_common: &build_common
  stage: build
  interruptible: true
  script:
    - yarn install --immutable
    - yarn workspace @trezor/components storybook-build
  artifacts:
    name: components-build-storybook-files
    expire_in: 7 days
    paths:
      - packages/components/.build-storybook

components build-storybook:
  <<: *build_common
  only:
    <<: *run_components_rules

components build-storybook-manual:
  <<: *build_common
  when: manual
  except:
    <<: *run_components_rules
