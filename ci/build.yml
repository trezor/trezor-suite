# Config
.config_sign_stable: &config_sign_stable
  needs:
    - msg-system config sign stable

.config_sign_dev: &config_sign_dev
  needs:
    - msg-system config sign dev

.run_everything_rules: &run_everything_rules
  refs:
    - develop
    - releases
    - schedules
    - /^release\//

# Suite-web build
suite-web build dev:
  stage: build
  <<: *config_sign_dev
  script:
    - yarn install --frozen-lockfile --cache-folder .yarn --prefer-offline
    - yarn build:libs
    - ASSET_PREFIX=/suite-web/${CI_BUILD_REF_NAME}/web yarn workspace @trezor/suite-web build
  artifacts:
    expire_in: 7 days
    paths:
      - packages/suite-web/build

suite-web build stable:
  stage: build
  <<: *config_sign_dev
  only:
    refs:
      - develop
      - releases
      - schedules
      - /^release\//
  script:
    - yarn install --frozen-lockfile --cache-folder .yarn --prefer-offline
    - yarn build:libs
    - ASSET_PREFIX=/web yarn workspace @trezor/suite-web build
  artifacts:
    expire_in: 7 days
    paths:
      - packages/suite-web/scripts/s3sync.sh
      - packages/suite-web/build

suite-web build stable codesign:
  stage: build
  <<: *config_sign_stable
  only:
    refs:
      - codesign
  tags:
    - darwin
  variables:
    IS_CODESIGN_BUILD: "true"
  script:
    - nix-shell --run "git lfs pull"
    - nix-shell --run "yarn install --frozen-lockfile --cache-folder .yarn-nix --prefer-offline"
    - nix-shell --run "yarn build:libs"
    - nix-shell --run "ASSET_PREFIX=/web yarn workspace @trezor/suite-web build"
  artifacts:
    expire_in: 7 days
    paths:
      - packages/suite-web/scripts/s3sync.sh
      - packages/suite-web/build

# Suite web landing build

## Build jobs
suite-web-landing build dev:
  stage: build
  script:
    - yarn install --frozen-lockfile --cache-folder .yarn --prefer-offline
    - yarn build:libs
    - ASSET_PREFIX=/suite-web-landing/${CI_BUILD_REF_NAME} yarn workspace @trezor/suite-web-landing build
  artifacts:
    expire_in: 7 days
    paths:
      - packages/suite-web-landing/build

suite-web-landing build stable:
  stage: build
  only:
    refs:
      - develop
      - releases
      - schedules
      - /^release\//
      - codesign
  script:
    - yarn install --frozen-lockfile --cache-folder .yarn --prefer-offline
    - yarn build:libs
    - yarn workspace @trezor/suite-web-landing build
  artifacts:
    expire_in: 7 days
    paths:
      - packages/suite-web-landing/scripts/s3sync.sh
      - packages/suite-web-landing/build

# Suite desktop build
.build: &build
  stage: build
  script:
    - yarn install --frozen-lockfile --cache-folder .yarn --prefer-offline
    - yarn build:libs
    - yarn workspace @trezor/suite-data copy-static-files
    - yarn workspace @trezor/suite-desktop build:${platform}
    - ls -la packages/suite-desktop/build-electron
    - mv packages/suite-desktop/build-electron/* .
    - more latest*.yml | cat
  artifacts:
    paths:
      - ${artifact}
      - latest*.yml
    expire_in: 1 days

.build_nix: &build_nix
  script:  # override build script to use nix-shell instead
    - nix-shell --run "git lfs pull"
    - nix-shell --run "yarn install --frozen-lockfile --cache-folder .yarn-nix --prefer-offline"
    - nix-shell --run "yarn build:libs"
    - nix-shell --run "yarn workspace @trezor/suite-data copy-static-files"
    - nix-shell --run "yarn workspace @trezor/suite-desktop build:${platform}"
    - nix-shell --run "bash packages/suite-desktop/scripts/gnupg-sign.sh"
    - ls -la packages/suite-desktop/build-electron
    - mv packages/suite-desktop/build-electron/* .
    - more latest*.yml | cat

## Suite desktop macOS app
suite-desktop build mac:
  <<: *config_sign_dev
  only:
    <<: *run_everything_rules
  tags:
    - darwin
  variables:
    artifact: ${DESKTOP_APP_NAME}*
    platform: mac
  <<: *build
  <<: *build_nix

suite-desktop build mac manual:
  <<: *config_sign_dev
  when: manual
  except:
    <<: *run_everything_rules
  tags:
    - darwin
  variables:
    artifact: ${DESKTOP_APP_NAME}*
    platform: mac
  <<: *build
  <<: *build_nix

suite-desktop build mac codesign:
  <<: *config_sign_stable
  only:
    refs:
      - codesign
  tags:
    - darwin
  variables:
    IS_CODESIGN_BUILD: "true"
    artifact: ${DESKTOP_APP_NAME}*
    platform: mac
  <<: *build
  <<: *build_nix
  artifacts:
    paths:
      - ${artifact}
      - latest*.yml
    expire_in: 7 days

## Suite desktop Linux app
suite-desktop build linux:
  <<: *config_sign_dev
  only:
    <<: *run_everything_rules
  variables:
    artifact: ${DESKTOP_APP_NAME}*
    platform: linux
  <<: *build

suite-desktop build linux manual:
  <<: *config_sign_dev
  when: manual
  except:
    <<: *run_everything_rules
  variables:
    artifact: ${DESKTOP_APP_NAME}*
    platform: linux
  <<: *build

suite-desktop build linux codesign:
  <<: *config_sign_stable
  only:
    refs:
      - codesign
  tags:
    - darwin
  variables:
    IS_CODESIGN_BUILD: "true"
    artifact: ${DESKTOP_APP_NAME}*
    platform: linux
  <<: *build
  <<: *build_nix
  artifacts:
    paths:
      - ${artifact}
      - latest*.yml
    expire_in: 7 days

## Suite desktop Windows app
suite-desktop build windows:
  <<: *config_sign_dev
  only:
    <<: *run_everything_rules
  image: $CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX/vdovhanych/electron-builder:wine
  variables:
    artifact: ${DESKTOP_APP_NAME}*
    platform: win
  <<: *build

suite-desktop build windows manual:
  <<: *config_sign_dev
  when: manual
  except:
    <<: *run_everything_rules
  image: $CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX/vdovhanych/electron-builder:wine
  variables:
    artifact: ${DESKTOP_APP_NAME}*
    platform: win
  <<: *build

suite-desktop build windows codesign:
  <<: *config_sign_stable
  only:
    refs:
      - codesign
  tags:
    - darwin
  image: $CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX/vdovhanych/electron-builder:wine
  variables:
    IS_CODESIGN_BUILD: "true"
    artifact: ${DESKTOP_APP_NAME}*
    platform: win
  <<: *build
  <<: *build_nix
  artifacts:
    paths:
      - ${artifact}
      - latest*.yml
    expire_in: 7 days

# Suite native build

## Suite mobile Android app
suite-native build android:
  image: $CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX/reactnativecommunity/react-native-android
  stage: build
  only:
    <<: *run_everything_rules
  script:
    - yarn install --frozen-lockfile --cache-folder .yarn --prefer-offline
    - yarn build:libs
    - yarn workspace @trezor/suite-data copy-static-files
    - yarn workspace @trezor/suite-native build:android
    - mv packages/suite-native/android/app/build/outputs/apk/release/app-release.apk .
  artifacts:
    expire_in: 1 day
    paths:
      - app-release.apk

suite-native build android manual:
  stage: build
  <<: *config_sign_dev
  when: manual
  except:
    <<: *run_everything_rules
  image: $CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX/reactnativecommunity/react-native-android
  script:
    - yarn install --frozen-lockfile --cache-folder .yarn --prefer-offline
    - yarn build:libs
    - yarn workspace @trezor/suite-data copy-static-files
    - yarn workspace @trezor/suite-native build:android
    - mv packages/suite-native/android/app/build/outputs/apk/release/app-release.apk .
  artifacts:
    expire_in: 1 day
    paths:
      - app-release.apk
