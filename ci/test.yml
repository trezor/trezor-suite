# @trezor/suite-web
.e2e web:
  stage: integration testing
  variables:
    COMPOSE_PROJECT_NAME: $CI_JOB_ID
    COMPOSE_FILE: ./docker/docker-compose.suite-ci.yml
    ## Tells Cypress where is the index of application
    CYPRESS_ASSET_PREFIX: /web
    CYPRESS_baseUrl: ${DEV_SERVER_URL}/suite-web/${CI_BUILD_REF_NAME}
    ## should tests do snapshot testing
    CYPRESS_SNAPSHOT: 1
    ## reporter url
    TRACK_SUITE_URL: https://track-suite.herokuapp.com
    ## when debugging or developing tests it does not make sense to have retries,
    ## in other cases retries are useful to avoid occasional failures due to flaky tests
    ALLOW_RETRY: 1
  before_script:
    - docker login $CI_DEPENDENCY_PROXY_SERVER -u $CI_DEPENDENCY_PROXY_USER -p $CI_DEPENDENCY_PROXY_PASSWORD
  script:
    - yarn install --pure-lockfile --cache-folder .yarn --prefer-offline
    - docker-compose pull
    - docker-compose up -d ${CONTAINERS}
    - docker-compose run test-run
  after_script:
    - docker cp ${CI_JOB_ID}_trezor-user-env-unix_1:/trezor-user-env/logs/debugging.log trezor-user-env-debugging.log
    - docker cp ${CI_JOB_ID}_trezor-user-env-unix_1:/trezor-user-env/logs/emulator_bridge.log tenv-emulator-bridge-debugging.log
    - docker cp ${CI_JOB_ID}_trezor-user-env-unix_1:/trezor-user-env/docker/version.txt trezor-user-env-version.txt
    - docker-compose down
    - docker network prune -f
  artifacts:
    expire_in: 7 days
    when: always
    paths:
      - ./packages/integration-tests/projects/suite-web/snapshots
      - ./packages/integration-tests/projects/suite-web/screenshots
      - ./packages/integration-tests/projects/suite-web/videos
      - download-snapshots.sh
      - trezor-user-env-debugging.log
      - tenv-emulator-bridge-debugging.log
      - trezor-user-env-version.txt
  parallel:
    matrix:
      - TEST_GROUP: ['@group:suite', '@group:onboarding', '@group:device-management', '@group:settings', '@group:metadata']
        CONTAINERS: 'trezor-user-env-unix'
      - TEST_GROUP: '@group:wallet'
        CONTAINERS: 'trezor-user-env-unix bitcoin-regtest'

suite web:
  extends: .e2e web

suite web snapshots:
  extends: .e2e web
  when: manual
  variables:
    CYPRESS_SNAPSHOT: 1
    CYPRESS_updateSnapshots: 1

# Nightly tests against latest trezor-firmware master
suite web nightly:
  extends: .e2e web
  only:
    - schedules
  variables:
    FIRMWARE: 2-master

# TODO scheduled jobs against beta chrome channel
# TODO scheduled jobs against suite.trezor.io

# @trezor/rollout

## This test should exist only until trezor-connect is in monorepo.
## It checks whether rollout works with currently released webwallet data
rollout nightly:
  only:
    - schedules
  stage: integration testing
  script:
    - yarn install --frozen-lockfile --cache-folder .yarn --prefer-offline
    - yarn workspace @trezor/rollout test:integration

rollout:
  when: manual
  stage: integration testing
  script:
    - yarn install --frozen-lockfile --cache-folder .yarn --prefer-offline
    - yarn workspace @trezor/rollout test:integration

# @trezor/transport
.e2e transport:
  stage: integration testing
  variables:
    COMPOSE_FILE: ./docker/docker-compose.transport-test.yml
  script:
    - yarn install --pure-lockfile --cache-folder .yarn --prefer-offline
    - yarn workspace @trezor/transport build:lib
    - ./docker/docker-transport-test.sh
  after_script:
    - docker-compose down
    - docker network prune -f

transport:
  extends: .e2e transport
  when: manual

transport nightly:
  extends: .e2e transport
  only:
    - schedules

# @trezor/blockchain-link
.e2e blockchain-link:
  stage: integration testing
  script:
    - yarn install --frozen-lockfile --cache-folder .yarn --prefer-offline
    - yarn workspace @trezor/blockchain-link build:lib
    - yarn workspace @trezor/blockchain-link build:workers
    - yarn workspace @trezor/blockchain-link test:integration

blockchain-link:
  extends: .e2e blockchain-link
  when: manual

blockchain-link nightly:
  extends: .e2e blockchain-link
  only:
    - schedules
