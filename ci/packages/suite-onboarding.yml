suite-onboarding lint:
    stage: lint
    script:
        - env
        - yarn workspace @trezor/suite-onboarding lint

suite-onboarding type check:
    stage: type check
    allow_failure: true
    script:
        - yarn workspace @trezor/suite-onboarding type-check

suite-onboarding build:
    stage: build
    script:
        - assetPrefix=/suite-onboarding/${CI_BUILD_REF_NAME} yarn workspace @trezor/suite-onboarding build
    artifacts:
        expire_in: 15 minutes
        paths:
            - $PACKAGE_PATH_SUITE_ONBOARDING/build

suite-onboarding deploy dev:
    stage: deploy
    variables:
        DEPLOY_DIRECTORY: ${DEPLOY_BASE_DIR}/suite-onboarding/${CI_BUILD_REF_NAME}
        DEPLOY_URL: ${DEV_SERVER_URL}/suite-onboarding/${CI_BUILD_REF_NAME}
    dependencies:
        - suite-onboarding build
    environment:
        name: ${CI_BUILD_REF_NAME}
        url: $BASE_REVIEW_URL/${CI_BUILD_REF_NAME}
        on_stop: suite-onboarding delete review
    before_script: []
    script:
        - env
        - cd ${PACKAGE_PATH_SUITE_ONBOARDING}
        - echo "Deploy to dev servers"
        - mkdir -p ${DEPLOY_BASE_DIR}/suite-onboarding
        - mkdir -p ${DEPLOY_DIRECTORY} # create build folder
        - rsync --delete -va build/ "${DEPLOY_DIRECTORY}/"
        - curl "https://api.telegram.org/bot${TELEGRAM_DEPLOY_BOT_TOKEN_PART1}:${TELEGRAM_DEPLOY_BOT_TOKEN_PART2}-${TELEGRAM_DEPLOY_BOT_TOKEN_PART3}/sendMessage?chat_id=-1001354778014&text=${DEPLOY_URL}"
    tags:
        - deploy

suite-onboarding delete review:
    stage: deploy
    variables:
        GIT_STRATEGY: none
        DEPLOY_DIRECTORY: ${DEPLOY_BASE_DIR}/suite-onboarding/${CI_BUILD_REF_NAME}
    when: manual
    environment:
        name: ${CI_BUILD_REF_NAME}
        action: stop
    script:
        - cd packages/suite-onboarding
        - 'rm -r "${DEPLOY_DIRECTORY}"'
    tags:
        - deploy
