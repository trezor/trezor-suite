.config_sign_dev: &config_sign_dev
  needs:
    - msg-system config sign dev

.config_sign_stable: &config_sign_stable
  needs:
    - msg-system config sign stable

.build: &build
  stage: build
  script:
    - yarn install --frozen-lockfile --cache-folder .yarn --prefer-offline
    - yarn build:libs
    - yarn workspace @trezor/suite-data copy-static-files
    - yarn workspace @trezor/suite-desktop build:${platform}
    - ls -la packages/suite-desktop/build-electron
    - mv packages/suite-desktop/build-electron/* .
    - more latest*.yml | cat
  artifacts:
    paths:
      - ${artifact}
      - latest*.yml
    expire_in: 1 days

.build_nix: &build_nix
  script: # override build script to use nix-shell instead
    - nix-shell --run "git lfs pull"
    - nix-shell --run "yarn install --frozen-lockfile --cache-folder .yarn --prefer-offline"
    - nix-shell --run "yarn build:libs"
    - nix-shell --run "yarn workspace @trezor/suite-data copy-static-files"
    - nix-shell --run "yarn workspace @trezor/suite-desktop build:${platform}"
    - nix-shell --run "bash packages/suite-desktop/scripts/gnupg-sign.sh"
    - ls -la packages/suite-desktop/build-electron
    - mv packages/suite-desktop/build-electron/* .
    - more latest*.yml | cat

.run_everything_rules: &run_everything_rules
  refs:
    - develop
    - releases
    - schedules
    - /^release\//
    - /^run\//

suite-desktop build mac:
  <<: *config_sign_dev
  only:
    <<: *run_everything_rules
  tags:
    - darwin
  variables:
    artifact: ${DESKTOP_APP_NAME}*
    platform: mac
  <<: *build
  <<: *build_nix

suite-desktop build mac manual:
  <<: *config_sign_dev
  when: manual
  except:
    <<: *run_everything_rules
  tags:
    - darwin
  variables:
    artifact: ${DESKTOP_APP_NAME}*
    platform: mac
  <<: *build
  <<: *build_nix

suite-desktop build mac codesign:
  <<: *config_sign_stable
  only:
    refs:
      - codesign
  tags:
    - darwin
  variables:
    IS_CODESIGN_BUILD: "true"
    artifact: ${DESKTOP_APP_NAME}*
    platform: mac
  <<: *build
  <<: *build_nix
  artifacts:
    paths:
      - ${artifact}
      - latest*.yml
    expire_in: 7 days

suite-desktop build linux:
  <<: *config_sign_dev
  only:
    <<: *run_everything_rules
  variables:
    artifact: ${DESKTOP_APP_NAME}*
    platform: linux
  <<: *build

suite-desktop build linux manual:
  <<: *config_sign_dev
  when: manual
  except:
    <<: *run_everything_rules
  variables:
    artifact: ${DESKTOP_APP_NAME}*
    platform: linux
  <<: *build

suite-desktop build linux codesign:
  <<: *config_sign_stable
  only:
    refs:
      - codesign
  tags:
    - darwin
  variables:
    IS_CODESIGN_BUILD: "true"
    artifact: ${DESKTOP_APP_NAME}*
    platform: linux
  <<: *build
  <<: *build_nix
  artifacts:
    paths:
      - ${artifact}
      - latest*.yml
    expire_in: 7 days

suite-desktop build windows:
  <<: *config_sign_dev
  only:
    <<: *run_everything_rules
  image: electronuserland/builder:wine
  variables:
    artifact: ${DESKTOP_APP_NAME}*
    platform: win
  <<: *build

suite-desktop build windows manual:
  <<: *config_sign_dev
  when: manual
  except:
    <<: *run_everything_rules
  image: electronuserland/builder:wine
  variables:
    artifact: ${DESKTOP_APP_NAME}*
    platform: win
  <<: *build

suite-desktop build windows codesign:
  <<: *config_sign_stable
  only:
    refs:
      - codesign
  tags:
    - darwin
  image: electronuserland/builder:wine
  variables:
    IS_CODESIGN_BUILD: "true"
    artifact: ${DESKTOP_APP_NAME}*
    platform: win
  <<: *build
  <<: *build_nix
  artifacts:
    paths:
      - ${artifact}
      - latest*.yml
    expire_in: 7 days

suite-desktop deploy dev:
  stage: deploy to dev
  only:
    <<: *run_everything_rules
  variables:
    DEPLOY_DIRECTORY: ${DEPLOY_BASE_DIR}/suite-desktop/${CI_BUILD_REF_NAME}
  script:
    - mkdir -p ${DEPLOY_DIRECTORY}
    - 'rsync --delete -va "${DESKTOP_APP_NAME}"-*.AppImage "${DEPLOY_DIRECTORY}/" || :'
    - 'rsync --delete -va "${DESKTOP_APP_NAME}"-*.dmg "${DEPLOY_DIRECTORY}/" || :'
    - 'rsync --delete -va "${DESKTOP_APP_NAME}"-*.exe "${DEPLOY_DIRECTORY}/" || :'
  tags:
    - deploy

suite-desktop publish prod:
  stage: deploy to production
  only:
    refs:
      - releases
  script:
    - cd packages/suite-desktop
    - yarn publish
