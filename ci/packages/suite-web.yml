.run_everything_rules: &run_everything_rules
  refs:
    - develop
    - releases
    - schedules
    - /^release\//

# build

suite-web build dev:
  stage: build
  script:
    - yarn install --frozen-lockfile --cache-folder .yarn --prefer-offline
    - yarn build:libs
    - assetPrefix=/suite-web/${CI_BUILD_REF_NAME}/web yarn workspace @trezor/suite-web build
  artifacts:
    expire_in: 7 days
    paths:
      - packages/suite-web/build

suite-web build beta:
  stage: build
  only:
    <<: *run_everything_rules
  script:
    - yarn install --frozen-lockfile --cache-folder .yarn --prefer-offline
    - yarn build:libs
    - assetPrefix=/wallet/web yarn workspace @trezor/suite-web build
  artifacts:
    expire_in: 7 days
    paths:
      - packages/suite-web/scripts/s3sync.sh
      - packages/suite-web/build

suite-web build stable:
  stage: build
  only:
    <<: *run_everything_rules
  script:
    - yarn install --frozen-lockfile --cache-folder .yarn --prefer-offline
    - yarn build:libs
    - assetPrefix=/web yarn workspace @trezor/suite-web build
  artifacts:
    expire_in: 7 days
    paths:
      - packages/suite-web/scripts/s3sync.sh
      - packages/suite-web/build

# deploy

suite-web deploy dev:
  stage: deploy to dev
  variables:
    DEPLOY_DIRECTORY: ${DEPLOY_BASE_DIR}/suite-web/${CI_BUILD_REF_NAME}
  needs:
    - suite-web-landing build dev
    - suite-web build dev
  environment:
    name: ${CI_BUILD_REF_NAME}
    url: $BASE_REVIEW_URL/${CI_BUILD_REF_NAME}
  before_script: []
  script:
    - mkdir -p ${DEPLOY_DIRECTORY}/web
    - rsync --delete -va packages/suite-web-landing/build/ "${DEPLOY_DIRECTORY}/"
    - rsync --delete -va packages/suite-web/build/ "${DEPLOY_DIRECTORY}/web/"
  tags:
    - deploy

# e2e

.e2e web:
  stage: integration testing
  needs:
    - suite-web deploy dev
  variables:
    COMPOSE_PROJECT_NAME: $CI_JOB_ID
    COMPOSE_FILE: ./docker/docker-compose.suite-ci.yml
    # corresponds with the NextJs assetPrefix. Tells Cypress where is the index of application
    CYPRESS_ASSET_PREFIX: /web
    CYPRESS_baseUrl: ${DEV_SERVER_URL}/suite-web/${CI_BUILD_REF_NAME}
    # should tests do snapshot testing
    CYPRESS_SNAPSHOT: 1
    # reporter url
    TRACK_SUITE_URL: https://track-suite.herokuapp.com
    # when debugging or developing tests it does not make sense to have retries,
    # in other cases retries are useful to avoid occasional failures due to flaky tests
    ALLOW_RETRY: 1
  script:
    - yarn install --pure-lockfile --cache-folder .yarn --prefer-offline
    - docker-compose pull
    - docker-compose up -d trezor-user-env-unix
    - sleep 5
    - docker-compose run test-run
  after_script:
    - docker-compose down
    - docker network prune -f
  artifacts:
    expire_in: 7 days
    when: always
    paths:
      - ./packages/integration-tests/projects/suite-web/snapshots
      - ./packages/integration-tests/projects/suite-web/screenshots
      - ./packages/integration-tests/projects/suite-web/videos
      - download-snapshots.sh

e2e web suite:
  extends: .e2e web
  variables:
    TEST_GROUP: '@group:suite'

e2e web onboarding:
  extends: .e2e web
  variables:
    TEST_GROUP: '@group:onboarding'

e2e web device-management:
  extends: .e2e web
  variables:
    TEST_GROUP: '@group:device-management'

e2e web settings:
  extends: .e2e web
  variables:
    TEST_GROUP: '@group:settings'

e2e web metadata:
  extends: .e2e web
  variables:
    TEST_GROUP: '@group:metadata'

# Update snapshots
# You may update snapshots either locally (see readme https://docs.trezor.io/trezor-suite/tests/e2e-web.html)
# But as this is quite time consuming you may prefer to do it in CI

# TODO: should there be one job updating all? not sure
e2e web suite snapshots:
  when: manual
  extends: .e2e web
  variables:
    CYPRESS_SNAPSHOT: 1
    CYPRESS_updateSnapshots: 1
    TEST_GROUP: '@group:suite'

e2e web onboarding snapshots:
  when: manual
  extends: .e2e web
  variables:
    CYPRESS_SNAPSHOT: 1
    CYPRESS_updateSnapshots: 1
    TEST_GROUP: '@group:onboarding'

e2e web device-management snapshots:
  when: manual
  extends: .e2e web
  variables:
    CYPRESS_SNAPSHOT: 1
    CYPRESS_updateSnapshots: 1
    TEST_GROUP: '@group:device-management'

e2e web settings snapshots:
  when: manual
  extends: .e2e web
  variables:
    CYPRESS_SNAPSHOT: 1
    CYPRESS_updateSnapshots: 1
    TEST_GROUP: '@group:settings'

e2e web metadata snapshots:
  when: manual
  extends: .e2e web
  variables:
    CYPRESS_SNAPSHOT: 1
    CYPRESS_updateSnapshots: 1
    TEST_GROUP: '@group:metadata'

e2e web all snapshots:
  when: manual
  extends: .e2e web
  variables:
    CYPRESS_SNAPSHOT: 1
    CYPRESS_updateSnapshots: 1

# TODO scheduled jobs against beta chrome channel
# TODO scheduled jobs against suite.trezor.io
