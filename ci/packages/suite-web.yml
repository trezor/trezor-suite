variables:
    TEST_CMD: 'yarn concurrently --success first --kill-others "cd ./docker/trezor-user-env/controller && python3 ./main.py" "node ./packages/integration-tests/projects/suite-web/run_tests.js --project ./packages/integration-tests/projects/suite-web --stage=$TEST_GROUP"'

.auto_run_branches: &auto_run_branches
    refs:
        - develop
        - releases
        - schedules

.e2e_artifacts: &e2e_artifacts
    expire_in: 7 days
    when: always
    paths:
        - /builds/satoshilabs/trezor/trezor-suite/packages/integration-tests/projects/suite-web/snapshots
        - /builds/satoshilabs/trezor/trezor-suite/packages/integration-tests/projects/suite-web/screenshots
        - /builds/satoshilabs/trezor/trezor-suite/packages/integration-tests/projects/suite-web/videos

.e2e_script_common: &e2e_script_common
    - npx cypress install
    - export CYPRESS_ASSET_PREFIX=/web
    - export CYPRESS_baseUrl=${DEV_SERVER_URL}/suite-web/${CI_BUILD_REF_NAME}
    - export TRACK_SUITE_URL=https://track-suite.herokuapp.com

suite-web build dev:
    stage: build
    script:
        - assetPrefix=/suite-web/${CI_BUILD_REF_NAME}/web yarn workspace @trezor/suite-web build
    artifacts:
        expire_in: 7 days
        paths:
            - packages/suite-web/build

suite-web build beta:
    stage: build
    only:
        <<: *auto_run_branches
    script:
        - assetPrefix=/wallet/web yarn workspace @trezor/suite-web build
    artifacts:
        expire_in: 7 days
        paths:
            - packages/suite-web/scripts/s3sync.sh
            - packages/suite-web/build

suite-web build stable:
    stage: build
    only:
        <<: *auto_run_branches
    script:
        - assetPrefix=/web yarn workspace @trezor/suite-web build
    artifacts:
        expire_in: 7 days
        paths:
            - packages/suite-web/scripts/s3sync.sh
            - packages/suite-web/build

suite-web deploy dev:
  stage: deploy to dev servers
  variables:
    DEPLOY_DIRECTORY: ${DEPLOY_BASE_DIR}/suite-web/${CI_BUILD_REF_NAME}
  dependencies:
    - install and build
    - suite-web-landing build dev
    - suite-web build dev
  environment:
    name: ${CI_BUILD_REF_NAME}
    url: $BASE_REVIEW_URL/${CI_BUILD_REF_NAME}
  before_script: []
  script:
    - mkdir -p ${DEPLOY_DIRECTORY}/web
    - rsync --delete -va packages/suite-web-landing/build/ "${DEPLOY_DIRECTORY}/"
    - rsync --delete -va packages/suite-web/build/ "${DEPLOY_DIRECTORY}/web/"
  tags:
    - deploy

suite-web e2e chrome stage=stable/suite:
    stage: integration testing
    variables:
        TEST_GROUP: "@stable/suite"
    script:
        - *e2e_script_common
        - export CYPRESS_SNAPSHOT=1
        - export BROWSER=chrome
        - "eval $TEST_CMD"
    artifacts:
        <<: *e2e_artifacts
    dependencies: []

suite-web e2e chrome stage=stable/metadata:
    stage: integration testing
    variables:
        TEST_GROUP: "@stable/metadata"
    script:
        - *e2e_script_common
        - export CYPRESS_SNAPSHOT=1
        - export BROWSER=chrome
        - "eval $TEST_CMD"
    artifacts:
        <<: *e2e_artifacts
    dependencies: []

suite-web e2e chrome stage=stable/device-management:
    stage: integration testing
    variables:
        TEST_GROUP: "@stable/device-management"
    script:
        - *e2e_script_common
        - export CYPRESS_SNAPSHOT=1
        - export BROWSER=chrome
        - "eval $TEST_CMD"
    artifacts:
        <<: *e2e_artifacts
    dependencies: []

# this job is intended to collect statistics on tests in beta stage (=tests that are possibly unstable)
# failing test here does not make job fail, run_tests script with --stage='@beta' exits with non-zero
# code only when there is some runtime error
.suite-web e2e chrome stage=beta:
    stage: integration testing
    variables:
        TEST_GROUP: "@beta"
    script:
        - *e2e_script_common
        - export CYPRESS_SNAPSHOT=1
        - export BROWSER=chrome
        - "eval $TEST_CMD"
    artifacts:
        <<: *e2e_artifacts
    dependencies: []

# on scheduled job every night, run all stable tests against latest chrome-beta. This is meant to be
# kind of an early-warning system.
suite-web e2e chrome-beta stage=stable:
    stage: integration testing
    variables:
        TEST_GROUP: "@stable"
    only:
        - schedules
    allow_failure: false
    script:
        - *e2e_script_common
        - apt-get update && apt-get upgrade -y # update chrome-beta channel to the latest
        - export BROWSER=/usr/bin/google-chrome-beta
        - "eval $TEST_CMD"
    artifacts:
        <<: *e2e_artifacts
    dependencies: []

suite-web deploy staging-wallet:
    stage: deploy to staging
    dependencies:
        - suite-web build beta
        - suite-desktop build mac
        - suite-desktop build linux
        - suite-desktop build windows
    environment:
        name: ${CI_BUILD_REF_NAME}-staging
        url: ${STAGING_WALLET_SERVER_URL}
    before_script: []
    only:
        <<: *auto_run_branches
    when: manual
    script:
        - source ${STAGING_WALLET_DEPLOY_KEYFILE}
        - mkdir -p packages/suite-web/build/static/desktop
        - rsync --delete -va "${DESKTOP_APP_NAME}"-*.AppImage ./packages/suite-web/build/static/desktop
        - rsync --delete -va "${DESKTOP_APP_NAME}"-*.zip ./packages/suite-web/build/static/desktop
        - rsync --delete -va "${DESKTOP_APP_NAME}"-*.exe ./packages/suite-web/build/static/desktop
        - cd packages/suite-web
        - ./scripts/s3sync.sh staging-wallet
    tags:
        - deploy
# todo: add smoke test job on stage / beta (need basic auth)

suite-web deploy staging-suite:
    stage: deploy to staging
    dependencies:
        - suite-web build stable
        - suite-desktop build mac
        - suite-desktop build linux
        - suite-desktop build windows
    environment:
        name: ${CI_BUILD_REF_NAME}-staging
        url: ${STAGING_SUITE_SERVER_URL}
    before_script: []
    only:
        <<: *auto_run_branches
    when: manual
    script:
        - source ${STAGING_SUITE_DEPLOY_KEYFILE}
        - mkdir -p packages/suite-web/build/static/desktop
        - rsync --delete -va "${DESKTOP_APP_NAME}"-*.AppImage ./packages/suite-web/build/static/desktop
        - rsync --delete -va "${DESKTOP_APP_NAME}"-*.zip ./packages/suite-web/build/static/desktop
        - rsync --delete -va "${DESKTOP_APP_NAME}"-*.exe ./packages/suite-web/build/static/desktop
        - cd packages/suite-web
        - ./scripts/s3sync.sh staging-suite
    tags:
        - deploy
