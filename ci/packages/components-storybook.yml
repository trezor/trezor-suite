components-storybook lint:
  stage: lint and prettier
  script:
    - yarn workspace @trezor/components-storybook lint
  dependencies:
    - install and build

components-storybook type check:
  stage: typescript type check
  script:
    - yarn workspace @trezor/components-storybook type-check
  dependencies:
    - install and build

components-storybook build:
  stage: build
  script:
    - yarn workspace @trezor/components-storybook build
  artifacts:
    name: components-build-files
    expire_in: 15 minutes
    paths:
      - packages/components-storybook/.build
  dependencies:
    - install and build

components-storybook deploy dev:
  stage: deploy to dev servers
  variables:
    DEPLOY_DIRECTORY: ${DEPLOY_BASE_DIR}/components-storybook/${CI_BUILD_REF_NAME}
    DEPLOY_URL: ${DEV_SERVER_URL}/components-storybook/${CI_BUILD_REF_NAME}
  dependencies:
    - install and build
    - components-storybook build
  environment:
    name: ${CI_BUILD_REF_NAME}
    url: $BASE_REVIEW_URL/${CI_BUILD_REF_NAME}
    on_stop: components-storybook delete review
  before_script: []
  script:
    - cd packages/components-storybook
    - echo "Deploy to dev servers"
    - mkdir -p ${DEPLOY_BASE_DIR}/components-storybook
    - mkdir -p ${DEPLOY_DIRECTORY} # create build folder
    - rsync --delete -va .build/ "${DEPLOY_DIRECTORY}/"
    - curl "https://api.telegram.org/bot${TELEGRAM_DEPLOY_BOT_TOKEN_PART1}:${TELEGRAM_DEPLOY_BOT_TOKEN_PART2}-${TELEGRAM_DEPLOY_BOT_TOKEN_PART3}/sendMessage?chat_id=-1001354778014&text=${DEPLOY_URL}"
  tags:
    - deploy

components-storybook delete review:
  before_script: []
  stage: deploy to dev servers
  variables:
    GIT_STRATEGY: none
    DEPLOY_DIRECTORY: ${DEPLOY_BASE_DIR}/components-storybook/${CI_BUILD_REF_NAME}
  when: manual
  environment:
    name: ${CI_BUILD_REF_NAME}
    action: stop
  before_script: []
  script:
    - cd packages/components-storybook
    - 'rm -r "${DEPLOY_DIRECTORY}"'
  tags:
    - deploy
  dependencies:
    - install and build

components-storybook test snapshots:
  image: cypress/base:10
  stage: integration testing
  script:
    - npx cypress install
    - CYPRESS_baseUrl=${DEV_SERVER_URL}/components-storybook/${CI_BUILD_REF_NAME} yarn workspace @trezor/components-storybook ci:test:snapshots
  artifacts:
    expire_in: 2 days
    when: always
    paths:
      - /builds/satoshilabs/trezor/trezor-suite/packages/components-storybook/test/snapshots
      - /builds/satoshilabs/trezor/trezor-suite/packages/components-storybook/test/screenshots

components-storybook make snapshot references:
  image: cypress/base:10
  stage: integration testing
  when: manual
  script:
    - npx cypress install
    - CYPRESS_baseUrl=${DEV_SERVER_URL}/components-storybook/${CI_BUILD_REF_NAME} yarn workspace @trezor/components-storybook ci:test:snapshots:references
  artifacts:
    expire_in: 5 days
    when: always
    paths:
      - /builds/satoshilabs/trezor/trezor-suite/packages/components-storybook/test/snapshots/
    
  dependencies:
    - install and build
