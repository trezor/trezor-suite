diff --git a/node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js b/node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js
index 30209aa..a644a3e 100644
--- a/node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js
+++ b/node_modules/next/dist/next-server/lib/router/utils/parse-relative-url.js
@@ -3,5 +3,5 @@
  * (e.g. `./hello`) then at least base must be.
  * Absolute urls are rejected with one exception, in the browser, absolute urls that are on
  * the current origin will be parsed as relative
- */function parseRelativeUrl(url,base){const resolvedBase=base?new URL(base,DUMMY_BASE):DUMMY_BASE;const{pathname,searchParams,search,hash,href,origin,protocol}=new URL(url,resolvedBase);if(origin!==DUMMY_BASE.origin||protocol!=='http:'&&protocol!=='https:'){throw new Error('invariant: invalid relative URL');}return{pathname,searchParams,search,hash,href:href.slice(DUMMY_BASE.origin.length)};}
+ */function parseRelativeUrl(url,base){const resolvedBase=base?new URL(base,DUMMY_BASE):DUMMY_BASE;const{pathname,searchParams,search,hash,href,origin,protocol}=new URL(url,resolvedBase);if(origin!==DUMMY_BASE.origin||protocol!=='http:'&&protocol!=='https:'&&protocol!=='file:'){throw new Error('invariant: invalid relative URL');}return{pathname,searchParams,search,hash,href:href.slice(DUMMY_BASE.origin.length)};}
 //# sourceMappingURL=parse-relative-url.js.map
\ No newline at end of file
